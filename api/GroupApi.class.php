<?php//群组class GroupApi extends Api{		//群组分类	public function category(){		$pid = intval($this->data['pid']);		return D('Category','group')->_makeTree($pid);	}	//所有群组	public function showAll(){		$row = (int) $this->data['row'];		$cid = (int) $this->data['cid'];		$map = "status=1";		if($cid){			$map .= " AND (cid0=$cid OR cid1=$cid)";		}		if(!$row) $row=20;		return D('Group','group')->field("id,uid,name,intro,announce,membercount,threadcount,ctime,is_del")->where($map)->findPage($row);	}	//创建群组	public function createGroup(){        $group['uid']   = $this->mid;        $group['name']  = h(t($this->data['name']));        $group['intro'] = h(t($this->data['intro']));        $group['cid0']  = intval($this->data['cid0']);        intval($this->data['cid1']) > 0	&& $group['cid1']  = intval($this->data['cid1']);        $group['type']  = $this->data['type'] == 'open'?'open':'close';        $this->config = model('Xdata')->lget('group');		$group['need_invite']  = intval($this->config[$group['type'] . '_invite']);  //是否需要邀请		$group['brower_level'] = $_POST['type'] == 'open'?'-1':'1'; //浏览权限		$group['openUploadFile'] = intval($this->config['openUploadFile']);		$group['whoUploadFile'] = intval($this->config['whoUploadFile']);		$group['whoDownloadFile'] = 3;		$group['openAlbum'] = intval($this->config['openAlbum']);		$group['whoCreateAlbum'] = intval($this->config['whoCreateAlbum']);		$group['whoUploadPic'] = intval($this->config['whoUploadPic']);		$group['anno'] = intval($_POST['anno']);		$group['ctime'] = time();		if (1 == $this->config['createAudit']) {			$group['status'] = 0;		}		// 群组LOGO 		$options['userId']		=	$this->mid;		$options['max_size']    =   2*1024*1024;  //2MB		$options['allow_exts']	=	'jpg,gif,png,jpeg,bmp';        $info	=	X('Xattach')->upload('group_logo',$options);	    if($info['status']) {		    $group['logo'] = $info['info'][0]['savepath'] . $info['info'][0]['savename'];	    }else{	    	$group['logo'] = 'default.gif';	    }        if(empty($group['name']) && empty($this->data['cid0']) && empty($this->data['cid1'])){            return 0;        }else{            $id = M('Group')->add($group);		    return $id;        }	}	//解散群组	public function destroyGroup(){		if ( empty($this->data['gid'])&&$this->mid !== null){            return 0;        }else{			return D('Group','group')->remove($this->data['gid']);		}	}	//编辑群组	public function editGroup() {		$gid = intval($this->data['gid']);		if(!$gid) return 0;		$group['name'] = t($this->data['name']);		$group['intro']	= t($this->data['intro']);		$group['announce']	= t($this->data['announce']);		$res = M("group")->where(array('id'=>$gid))->save($group);        if($res == false) {            return 0;        }else{            return 1;        }	}	//查看群组	public function showGroup(){        $res = M('Group')->where('id='.$this->data['gid']." AND is_del=0")->find();        if($res == false) {            return 0;        }else{            return $res;        }	}	//邀请群成员	public function invitMember(){		$this->data['gid'] = intval($this->data['gid']);		$toUserIds = explode(",",$this->data["fri_ids"]);		if(count($toUserIds)==0 || !$this->data['gid']){			return 0;		}		foreach ($toUserIds as $k=>$v) {			if (!$v) continue;			$v = intval($v);			if (M('GroupMember')->where("gid={$this->data['gid']} AND uid={$v}")->count() > 0) {				unset($toUserIds[$k]);				continue;			}			if ($this->isadmin) {				$invite_verify_data['gid'] = $this->gid;				$invite_verify_data['uid'] = $v;				M('group_invite_verify')->add($invite_verify_data);			}		}		$message_data['title']   = "邀您加入群组 {$this->groupinfo['name']}";		$url = '<a href="' . U('group/Group/index', array('gid'=>$this->gid)).'" target="_blank">去看看</a>';		$message_data['content'] = "你好，诚邀您加入“{$this->groupinfo['name']}” 群组，点击   " . $url . '进入。';		foreach ($toUserIds as $t_u_k => $t_u_v) {			$message_data['to'] 	 = $t_u_v;	        $res = model('Message')->postMessage($message_data,  $this->mid);	        if (!$res) {				unset($toUserIds[$t_u_k]);	        }		}		//return $toUserIds;		return 1;	}	//删除群成员	public function kickMember(){		$res = M('GroupMember')->where('gid=' . $this->data['gid'] . ' AND uid=' . $this->data['uid'] . ' AND level<>1 AND level<>2')->delete();        if($res == false) {            return 0;        }else{            return $res;        }	}	//审核群成员	public function acceptMember(){		$res = M('GroupMember')->where('gid=' . $this->data['gid'] . ' AND uid=' . $this->data['uid'])->setField("status",1);        if($res == false) {            return 0;        }else{            return 1;        }	}	//提升群成员	public function levelupMember(){		$res = M('GroupMember')->where('gid=' . $this->data['gid'] . ' AND uid=' . $this->data['uid'])->setField("level",2);        if($res == false) {            return 0;        }else{            return 1;        }	}	//降级群成员	public function leveldownMember(){		$res = M('GroupMember')->where('gid=' . $this->data['gid'] . ' AND uid=' . $this->data['uid'])->setField("level",3);        if($res == false) {            return 0;        }else{            return 1;        }	}	//查看群组所有成员	public function groupMembers(){		$res =  M('GroupMember')->order('level ')->where('gid=' . $this->data['gid'] . " AND status=1 AND level>0")->findall();        if($res == false) {            return 0;        }else{            return $res;        }	}	//群组微博列表	public function showStatuses(){		$gid = intval($this->data['gid']);		if(!$gid) return 0;        $res = D('WeiboOperate','group')->getHomeList($this->mid, $this->data['gid'], 'index', $this->since_id, $this->row);		return $res;	}	//群微博评论列表	public function showStatusComments($value=''){		$id  = intval($this->data['id']);		$gid =  intval($this->data['gid']);		$row =  intval($this->data['row']);		if(!$id || !$gid) return 0;		return D('WeiboComment','group')->getComment($id, $gid, $row);	}	//发布群微博	public function updateStatus(){        $data['content'] =  h($this->data['content']);        $data['gid']     =  intval($this->data['gid']);        if(!$data['gid'] || !$data['content']) return 0;        $id = D('GroupWeibo','group')->publish( $this->mid , $data, 0, 0);        if( $id ){			X('Credit')->setUserCredit($this->mid,'add_weibo');        	return intval($id);        }else{        	return -1;        }	}	//上传一张照片	public function uploadPic(){    	if( $_FILES['pic'] ){    		//执行上传操作    		$savePath =  $this->_getSaveTempPath();    		$filename = md5( time().'teste' ).'.'.substr($_FILES['pic']['name'],strpos($_FILES['pic']['name'],'.')+1);	    	if(@copy($_FILES['pic']['tmp_name'], $savePath.'/'.$filename) || @move_uploaded_file($_FILES['pic']['tmp_name'], $savePath.'/'.$filename))	        {	        	$result['boolen']    = 1;	        	$result['type_data'] = 'temp/'.$filename;	        	$result['picurl']    = SITE_PATH.'/uploads/temp/'.$filename;	        } else {	        	$result['boolen']    = 0;	        	$result['message']   = '上传失败';	        }    	}else{        	$result['boolen']    = 0;        	$result['message']   = '上传失败';    	}		return $result;	}	//发布图片微博	public function uploadStatus(){        $data['content'] =  h($this->data['content']);        $data['gid']     =  intval($this->data['gid']);        if(!$data['gid'] || !$data['content']) return 0;		$uppic = $this->uploadpic();		$pic = $uppic['boolen']?$uppic['type_data']:h($this->data['pic']);		$id = D('GroupWeibo','group')->publish( $this->mid , $data, 1, $pic);        if( $id ){			X('Credit')->setUserCredit($this->mid,'add_weibo');        	return intval($id);        }else{        	return -1;        }	}	//评论群微博	public function commentStatuses(){		$data['reply_comment_id'] = intval( $this->data['reply_comment_id'] );  //回复 评论的ID		$data['weibo_id']         = intval( $this->data['weibo_id'] );          //回复 微博的ID		$data['content']          = $this->data['comment_content'];         	//回复内容		$data['transpond']        = intval($this->data['transpond']);           //是否同是发布一条微博		$data['gid']              = intval($this->data['gid']);            		//群组ID		if(!$data['gid'] || !$data['weibo_id'] || !$data['content']) return 0;		$id = D('WeiboComment','group')->doaddcomment($this->mid, $data, true);		return (int) $id;	}	//转发群微博	public function repostStatuses(){		$data['content']		=  $this->data['content'] ;                  //转发内容		$data['transpond_id']   = intval( $this->data['weibo_id'] );        //转发的微博ID		$data['gid']            = intval($this->data['gid']);            		//群组ID				if(!$data['gid'] || !$data['transpond_id'] || !$data['content']) return 0;		$id = D('GroupWeibo','group')->transpond($this->mid, $data, true);		return (int) $id;	}	//群帖子列表	public function showTopics(){		$gid = intval($this->data['gid']);		$row = intval($this->data['row']);		if(!$gid) return 0;		if(!$row) $row=20;		return D('Topic','group')->getTopicList(0, array("gid=".$gid), "id,gid,uid,name,title,dist,top,`lock`,addtime,replytime,cid,viewcount,replycount,is_del", "id desc", $row);	}	//帖子详情	public function showTopicDetail(){		$gid = intval($this->data['gid']);		$tid = intval($this->data['tid']);		if(!$gid || !$tid) return 0;		$result = M()->query("SELECT t.title as title,p.id,p.tid,p.gid,p.uid,p.content,p.ip,p.istopic,p.ctime,p.quote,p.is_del FROM ".C('DB_PREFIX')."group_topic AS t,".C('DB_PREFIX')."group_post AS p WHERE p.tid=t.id AND p.tid=$tid AND p.gid=$gid AND p.is_del=0 ORDER BY p.id ASC");		if(!$result) 			return -1;		else 			return $result;	}	//群帖子分类	public function showTopicCategory(){		$gid = intval($this->data['gid']);		if(!$gid) return 0;		return D('Topic','group')->categoryList($gid);	}	//发布新贴子	public function createTopic(){		$gid = intval($this->data['gid']);		$cid = intval($this->data['cid']);		$title = t(h($this->data['title']));		$content = h($this->data['content']);		if(!$gid || !$title || !$content) return 0;				$topic['gid'] = $gid;		$topic['uid'] = $this->mid;		$topic['name'] = getUserName($this->mid);		$topic['title'] = $title;		$topic['cid']   = $cid;		$topic['addtime'] = time();		$topic['replytime'] = time();		if($tid = D('Topic','group')->add($topic)) {			$post['gid'] = $gid;			$post['uid'] = $this->mid;			$post['tid'] = $tid;			$post['content'] = $content;			$post['istopic'] = 1;			$post['ctime'] = time();			$post['ip'] = get_client_ip();			$post_id = D('Post','group')->add($post);			// 积分			X('Credit')->setUserCredit($this->mid, 'group_add_topic');			return $tid;		}else{			return -1;		}	}	//回复帖子	public function replyTopic(){		$gid = intval($this->data['gid']);		$tid = intval($this->data['tid']);		$content = h($this->data['content']);		if(!$gid || !$tid || !$content) return 0;		$post['gid'] = $gid;		$post['uid'] = $this->mid;		$post['tid'] = $tid;		$post['content'] = $content;		$post['istopic'] = 0;		$post['ctime'] = time();		$post['ip'] = get_client_ip();		$post_id = D('Post','group')->add($post);		if($post_id){			return $post_id;		}else{			return -1;		}	}	//文档列表	public function showFiles(){		$gid = intval($this->data['gid']);		$row = intval($this->data['row']);		if(!$gid) return 0;		if(!$row) $row=20;		$res = D('Dir','group')->getFileList(0,array("gid={$gid}"),"*",'ctime DESC',$row);        if($res){        	foreach($res as $k=>$v){        		unset($v['status'],$v['mtime'],$v['attachId'],$v['totaldowns']);        		$v['fileurl'] = UPLOAD_URL.'/'.$v['fileurl'];        		$res[$k]=$v;        	}            return $res;		}else{			return -1;		}	}	//上传文档	public function uploadFile(){		$gid = intval($this->data['gid']);		if(!$gid) return 0;		$info = X('Xattach')->upload('group_file');		if(!$info['status']) return 0;		$info = $info['info'][0];		$attchement['gid'] = $gid;		$attchement['uid'] = $this->mid;		$attchement['attachId'] = $info['id'];		$attchement['name'] = $info['name'];		$attchement['note'] = t(h($this->data['note']));    	$attchement['filesize'] = $info['size'];    	$attchement['filetype'] = $info['extension'];    	$attchement['fileurl'] = $info['savepath'] . $info['savename'];    	$attchement['ctime'] = time();	    $attchement['is_del'] = 0;	    $result = D('Dir','group')->add($attchement);    	if($result) {    		// 积分			X('Credit')->setUserCredit($this->mid, 'group_upload_file');			return $result;		}else{			return -1;		}	}}